{"version":3,"sources":["serviceWorker.js","despesa/despesaForm.jsx","despesa/despesaList.jsx","despesa/api.js","despesa/despesa.jsx","index.js"],"names":["Boolean","window","location","hostname","match","despesaForm","props","react_default","a","createElement","className","role","htmlFor","type","name","placeholder","value","despesa","descricao","onChange","handleChange","required","id","valor","categoria","checked","fixa","handleChangeCheckBox","onClick","salvar","despesaList","lista","map","key","concat","editar","remover","axios","create","baseURL","headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","Content-Type","Access-Control-Expose-Headers","Despesa","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refresh","api","get","then","resp","setState","objectSpread","state","data","post","toast","success","catch","e","console","log","response","error","detalhes","delete","newState","target","react_toastify","autoClose","Component","ReactDOM","render","despesa_Despesa","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4c76a3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport default props => {\n\n    return (\n        <div className=\"container-fluid d-flex flex-column\">\n            <span><h4 className=\"row justify-content-center align-items-center\" >Cadastrar Despesa</h4></span>\n            <section className=\"row justify-content-center align-items-center\">\n                <div role='form' className='col-8 form shadow p-3 mb-5 bg-white rounded'>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"descricao\" className=\"col-sm-2 col-form-label\">Descrição</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"text\" name=\"descricao\" className=\"form-control\" placeholder=\"Descrição\"\n                                   value={props.despesa.descricao}\n                                   onChange={props.handleChange} required />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"valor\" className=\"col-sm-2 col-form-label\">Valor</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"number\" className=\"form-control\" name=\"valor\" id=\"valor\" placeholder=\"Valor\"\n                                   value={props.despesa.valor}\n                                   onChange={props.handleChange}/>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"categoria\" className=\"col-sm-2 col-form-label\">Categoria</label>\n                        <div className=\"col-sm-10\">\n                            <select className=\"custom-select form-control\" name=\"categoria\"\n                                    value={props.despesa.categoria}\n                                    onChange={props.handleChange}>\n                                <option value=\"ALIMENTACAO\">Alimentação</option>\n                                <option value=\"VESTUARIO\">Vestuario</option>\n                                <option value=\"LAZER\">Lazer</option>\n                                <option value=\"EDUCACAO\">Educação</option>\n                                <option value=\"TRANSPORTE\">Transporte</option>\n                                <option value=\"SAUDE\">Saúde</option>\n                                <option value=\"CASA\">Casa</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <div className=\"col-sm-10\">\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"fixa\" name=\"fixa\"\n                                       checked={props.despesa.fixa}\n                                       onChange={props.handleChangeCheckBox}/>\n                                <label className=\"form-check-label\" htmlFor=\"fixa\">\n                                    Despesa fixa?\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <div className=\"col-sm-10\">\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => props.salvar()}>Salvar</button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default props => {\n\n    const renderRows = () => {\n        const lista = props.lista || []\n        return lista.map(despesa => (\n            <tr key={despesa.id}>\n                <td>{despesa.descricao}</td>\n                <td>{despesa.categoria}</td>\n                <td>{`R$ ${despesa.valor}`}</td>\n                <td>{despesa.fixa ? 'Sim' : 'Não'}</td>\n                <td>\n                    <button className={'btn btn-warning'} onClick={() => props.editar(despesa)}>\n                        <i className=\"fa fa-edit\"></i>\n                    </button>\n\n                    <button className='btn btn-danger ml-1' onClick={() => props.remover(despesa)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </td>\n            </tr>\n        ))\n    }\n\n    return (\n        <div className=\"table-responsive-sm col-sm-10 offset-sm-1\">\n            <table className='table table-sm'>\n                <thead>\n                <tr>\n                    <th>Descrição</th>\n                    <th>Categoria</th>\n                    <th>Valor</th>\n                    <th>Fixa?</th>\n                    <th>Ações</th>\n                </tr>\n                </thead>\n                <tbody>\n                {renderRows()}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"http://localhost:8080/despesa\",\n    headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': '*',\n        'Access-Control-Allow-Headers': '*',\n        'Content-Type': 'application/json',\n        'Access-Control-Expose-Headers': 'Access-Token, Uid, xsrf-token'\n    }\n})\n","import 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport React, {Component} from 'react'\nimport DespesaForm from \"./despesaForm\";\nimport DespesaList from \"./despesaList\";\nimport api from \"./api\";\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport default class Despesa extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            lista: [],\n            despesa: {\n                descricao: \"\",\n                categoria: \"ALIMENTACAO\",\n                valor: \"10\",\n                fixa: true\n            }\n        }\n\n        this.refresh()\n    }\n\n    refresh = () => {\n        api.get().then(resp => this.setState({...this.state, lista: resp.data, despesa: {\n                descricao: \"\",\n                categoria: \"ALIMENTACAO\",\n                valor: \"10\",\n                fixa: true\n            }}))\n    }\n\n    editar = (despesa) => {\n        api.get(`${despesa.id}`).then(resp => this.setState({...this.state, despesa: resp.data}))\n    }\n\n    salvar = () => {\n        api.post('', this.state.despesa)\n            .then(resp => {\n                toast.success(\"Despesa salva com sucesso!\")\n                this.refresh()\n            })\n            .catch(e => {\n                console.log(e.response)\n                toast.error(`Erro ao salvar despesa! ${e.response.data.detalhes}`)\n                this.refresh()\n            });\n\n    }\n\n    remover = (despesa) => {\n        api.delete(`${despesa.id}`)\n            .then(resp => {\n                toast.success(\"Despesa removida com sucesso!\")\n                this.refresh()\n            })\n            .catch(e => {\n                console.log(e.response)\n                toast.error(`Erro ao remover despesa! ${e}`)\n                this.refresh()\n            });\n    }\n\n    handleChange = (e) => {\n        let newState = {...this.state};\n        newState.despesa[e.target.name] = e.target.value\n        this.setState(newState)\n    }\n\n    handleChangeCheckBox = (e) => {\n        console.log(e.target.checked)\n        this.setState({...this.state, despesa:{...this.state.despesa, fixa: e.target.checked}})\n    }\n\n    render(){\n        return (\n            <main>\n                <nav className=\"navbar navbar-dark bg-dark\">\n                    <span className=\"navbar-brand mb-0 h1\">Despesas</span>\n                </nav>\n                <header className='page-header'>\n                    <h2>Acordo certo <small>Despesas</small></h2>\n                </header>\n                <DespesaForm despesa={this.state.despesa}\n                             handleChange={this.handleChange}\n                             handleChangeCheckBox={this.handleChangeCheckBox}\n                             salvar={this.salvar}/>\n                <DespesaList lista={this.state.lista}\n                             editar={this.editar}\n                             remover={this.remover}/>\n\n\n                <ToastContainer autoClose={2000} />\n            </main>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Despesa from \"./despesa/despesa\";\n\nReactDOM.render(<Despesa />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}